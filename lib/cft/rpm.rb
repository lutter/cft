require 'rpm'

module Cft::RPM
    # Generate the state of the RPM DB +root+ in file +fname+
    # The RPM database must be located in +/var/lib/rpm+ underneath
    # +root+
    # The output file +fname+ is overwritten; the format of the file
    # is internal to this module. Use +readstate+ if you need to read
    # the file
    def self.genstate(fname, root = nil)
        begin
            db = RPM::DB::open(false, root)
            File::open(fname, "w") do |f|
                db.each do |pkg|
                    f.print(pkg.sprintf("%{NAME}.%{ARCH} "))
                    f.puts(
                           "#{pkg.version.e || 0} #{pkg.version.v} #{pkg.version.r}")
                end
            end
        ensure
            db.close() unless db.nil?
        end
        return nil
    end

    # Read the state file +fname+ generated by +genstate+
    # Returns a hash, where each entry maps +name.arch+ to a
    # RPM::Version
    def self.readstate(fname)
        result = {}
        File::open(fname, "r") do |f|
            f.each_line do |l|
                na, e, v, r = l.split
                result[na] ||= []
                result[na] << RPM::Version::new(v, r, e)
            end
        end
        return result
    end
end
