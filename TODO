Todo
====

* Watch the rpm db

* Use rsync instead of homegrown tree-copying code ?

* Integrate with an SCM ?

* If you keep a session running for a while you get false change info
  from various daemons scribbling all over the place (e.g. /etc/printcap
  and /etc/mtab)

* Analyse the output
  - Reconstruct events from certain things (e.g. service start/stop/restart
    from how files appear and disappear in /var/run)
  - Find packages that were installed from txn timestamps in rpm DB (and
    clean the bare log from changes that are due to package installs)

* The synchronzation between the demon and the cmdline prog in Session is
  full of races. Instead of whacky gamin stuff, we should use pipes or
  similar. The essential issue though is that there is no telling how long
  after gamin gets a request it will actually report events on them.

* Replace gamin with something else

  Gamin causes weird races since there's no telling when it starts to
  actually monitor a dir. All we really need is some mechanism to tell us
  which files have been modified during the session; the nice thing about
  gamin is that we don't have to stat a huge amount of files, though that
  might turn out to be more robust than Gamin is.

  This would be yet another great use for unionfs; or possibly a logging FUSE.

* Resume a session
  Finished a session, realize more work is needed, allow to start the
  session again seamlessly
  Enough to just append to various output files ?

* RPM based session
  Look at installed package(s) and their config files (or all files);
  deduce changes and manifests from rpm -V for those packages

** Make that work on systems other than the one on which the session was run

   RPM analysis depends on having all the packages used in the session 
   installed and available, and therefore only works on the system on which
   the session was performed until a package used in a session is uninstalled

* Use case: 
  
  Yumrepo config has wrong baseurl; change on a system, map
  back into puppetmaster, respecting overrides etc.

* Add a way to document better what a session is about

  Jim Meyering suggests that users should be able to say sth like
  cft begin postfix "Install postfix and set it up to relay to
  mail.example.com"

Small fixes
===========

* Running 'manifest SESSION' creates an empty session if one doesn't exist - 
  kinda ugly

* 'cft manifest' should accept a complete path to a session (for moving
  tarred up sessions around)

* Missing types
  cron, sshkey
  
* Support package type (requires some smarts since we can't just list all
  packages)
